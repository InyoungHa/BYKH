<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 해당 파일에 모든 쿼리문을 작성 -->
<mapper namespace="attendanceMapper">
	<resultMap type="com.bykh.groupware.attendance.vo.AttendanceVO" id="att">
		<id column="ATT_CODE" 		property="attCode"/>
		<result column="GO_WORK" 		property="goWork"/>
		<result column="OUT_WORK" 		property="outWork"/>
		<result column="CUR_DATE" 		property="curDate"/>
		<result column="LATE_COUNT" 	property="lateCount"/>
		<result column="CHECK_LATE" 	property="checkLate"/>
		<result column="WORKING_DAYS" 	property="workingDays"/>
		<result column="OVER_TIME" 	property="overTime"/>
		<result column="FIX_TIME" 	property="fixTime"/>
		<result column="REST_TIME" 	property="restTime"/>
		<result column="WORKING_STATUS" 	property="workingStatus"/>
		<result column="WORKING" 	property="working"/>
		<result column="DAY" 	property="day"/>
		<result column="WORKING_TIME" 	property="workingTime"/>
		<result column="OUT_TIME" 	property="outTime"/>
		<result column="EMPNO" property="empno"/>
		<association property="empVO" resultMap="empMapper.emp"></association>
	</resultMap>
	
	<resultMap type="com.bykh.groupware.resource.vo.ResourceVO" id="resourceCal">
		<id column="SCHEDULE_CODE" property="id"/>
		<result column="EVENT_NAME" property="title"/>
		<result column="START_DATE" property="start"/>
		<result column="END_DATE" property="end"/>
		<result column="START_DAY" property="startDay"/>
		<result column="END_DAY" property="endDay"/>
		<result column="PARTICIPANT" property="participant"/>
		<result column="RESOURCE_CONTENT" property="resourceContent"/>
		<result column="TOTAL_DURATION" property="totalDuration"/>
		<result column="ALLDAY" property="allDay" jdbcType="CHAR" javaType="boolean"/>
		<result column="EMPNO" property="empno"/>
	</resultMap>
	

	
	
	

	<!-- 회원정보 조회 -->
	<select id="selectName" resultMap="att">
	SELECT ENAME, E_JOB FROM EMP
	WHERE EMPNO = #{empno}
	</select>
	
	<!--ATT_CODE 최신 첫번쨰 조회  -->
	<select id="selectAtt" resultMap="att">
		SELECT ATT_CODE
		FROM (
		SELECT ATT_CODE
		FROM ATTENDANCE
		WHERE EMPNO = #{empno}
		ORDER BY ATT_CODE DESC
		)
		WHERE ROWNUM = 1
	</select>
	

	<!--출근시간 저장 -->
	<insert id="goWork">
	INSERT INTO ATTENDANCE (
	ATT_CODE,
	GO_WORK,
	EMPNO
	)
	SELECT 'ATT_' || LPAD(NVL(MAX(TO_NUMBER(SUBSTR(ATT_CODE, 5))), 0) + 1, 3, '0'),
	SYSDATE,
	#{empno}
	FROM ATTENDANCE

	</insert>

	<!--퇴근시간 저장(NULL -> SYSDATE로 업데이트) -->
	<update id="outWork">
	UPDATE ATTENDANCE
	SET OUT_WORK = SYSDATE,
	WORKING_STATUS = CASE
	WHEN TO_CHAR(GO_WORK, 'HH24:MI:SS') > '09:10:00' THEN 2
	WHEN GO_WORK IS NULL THEN 3
	ELSE 1
	END
	WHERE ATT_CODE = #{attCode}
	AND EMPNO = #{empno}
	
	</update>


	<!-- 제일최신 출근시간 조회 -->
	<select id="selectGowork" resultMap="att">
		SELECT TO_CHAR(GO_WORK, 'HH:MI') AS GO_WORK
		FROM ATTENDANCE
		WHERE GO_WORK >= TRUNC(SYSDATE)
		AND EMPNO = #{empno}
		ORDER BY GO_WORK DESC
		FETCH FIRST 1 ROW ONLY
	</select>


	<!-- 제일최신 퇴근시간 조회 -->
	<select id="selectOutwork" resultMap="att">
		SELECT TO_CHAR(OUT_WORK, 'HH:MI') AS OUT_WORK
		FROM ATTENDANCE
		WHERE OUT_WORK >= TRUNC(SYSDATE)
		AND EMPNO = #{empno}
		ORDER BY OUT_WORK DESC
		FETCH FIRST 1 ROW ONLY
	</select>


	<!-- 지각 횟수 조회 -->
	<select id="selectLateCount" resultMap="att">
SELECT COUNT(*) AS LATE_COUNT
FROM ATTENDANCE
WHERE TO_CHAR(GO_WORK, 'HH24:MI:SS') > '09:10:00'
    AND EMPNO = #{empno}
    AND TRUNC(GO_WORK) = TRUNC(SYSDATE)
    AND ROWNUM = 1
	</select>



	<!-- 근무일수 조회 -->
	<select id="checkDays" resultMap="att">
	 SELECT COUNT(DISTINCT TO_CHAR(GO_WORK, 'YYYY-MM-DD')) AS WORKING_DAYS
  	FROM ATTENDANCE
  	WHERE GO_WORK >= TRUNC(SYSDATE) AND EMPNO = #{empno}
	</select>
	

	<!-- 총근무시간 조회 -->
	<select id="totalWorkingTime" resultMap="att">
		SELECT ROUND(SUM(OUT_WORK - GO_WORK) * 24) AS WORKING_DAYS
		FROM ATTENDANCE
		WHERE TO_CHAR(GO_WORK, 'YYYYMM') = TO_CHAR(SYSDATE, 'YYYYMM')
		AND EMPNO = #{empno} 
	</select>
	
		
	<!-- 연장근무시간 조회 -->
	<select id="findOverTime" resultMap="att">
	SELECT ROUND(SUM(
	CASE
	WHEN OUT_WORK - GO_WORK > (FIX_TIME - TRUNC(FIX_TIME)) THEN OUT_WORK -
	GO_WORK - (FIX_TIME - TRUNC(FIX_TIME))
	ELSE 0
	END) * 24) AS OVER_TIME
	FROM ATTENDANCE
	WHERE TO_CHAR(GO_WORK, 'YYYYMM') = TO_CHAR(SYSDATE, 'YYYYMM')
	AND EMPNO = #{empno} 
	</select>



	<!-- 결근 횟수 조회 -->
	<select id="findLateCount" resultMap="att">
	SELECT COUNT(*) AS LATE_COUNT
	FROM ATTENDANCE
	WHERE TRUNC(GO_WORK) = TRUNC(SYSDATE) AND GO_WORK IS NULL
	AND
	TO_CHAR(GO_WORK, 'YYYYMM') = TO_CHAR(SYSDATE, 'YYYYMM')
	AND
	TO_CHAR(GO_WORK, 'D') NOT IN (1, 7)
	AND TO_CHAR(GO_WORK, 'YYYY-MM-DD')
	NOT IN (
	'2023-01-01', 
	'2023-02-16', 
	'2023-02-17', 
	'2023-02-18', 
	'2023-03-01', 
	'2023-05-05', 
	'2023-05-09', 
	'2023-06-06', 
	'2023-08-15', 
	'2023-09-14', 
	'2023-09-15', 
	'2023-09-16', 
	'2023-10-03', 
	'2023-10-09' 
	)
	AND EMPNO = #{empno}
	</select>


	<!--출퇴근 기록 게시판 최근 5일 -->
	<select id="workingBoard" resultMap="att">
	SELECT
	TO_CHAR(GO_WORK, 'YYYY-MM-DD') AS WORKING,
	TO_CHAR(GO_WORK, 'DY')
	AS DAY,
	TO_CHAR(GO_WORK, 'HH24:MI') AS WORKING_TIME,
	TO_CHAR(OUT_WORK,
	'HH24:MI') AS OUT_TIME,
	CASE
	WHEN WORKING_STATUS = 1 THEN '정상출근'
	WHEN WORKING_STATUS = 2 THEN '지각'
	WHEN WORKING_STATUS = 3 THEN '결근'
	END AS WORKING_STATUS
	FROM ATTENDANCE
	WHERE EMPNO = #{empno}
	ORDER BY GO_WORK DESC
	FETCH FIRST 5 ROW ONLY

	</select>
	
    <!--출퇴근 기록 게시판 전체 -->
	<select id="workingBoardAll" resultMap="att">
	SELECT
	TO_CHAR(GO_WORK, 'YYYY-MM-DD') AS WORKING,
	TO_CHAR(GO_WORK, 'DY')
	AS DAY,
	TO_CHAR(GO_WORK, 'HH24:MI') AS WORKING_TIME,
	TO_CHAR(OUT_WORK,
	'HH24:MI') AS OUT_TIME,
	CASE
	WHEN WORKING_STATUS = 1 THEN '정상출근'
	WHEN WORKING_STATUS = 2 THEN '지각'
	WHEN WORKING_STATUS = 3 THEN '결근'
	END AS WORKING_STATUS
	FROM ATTENDANCE
	WHERE EMPNO = #{empno}
	ORDER BY GO_WORK DESC
	</select>
	
<!--자원조회내역 -->
<select id="selectResource" resultMap="resourceCal">
	SELECT EVENT_NAME,
	TO_CHAR(START_DATE, 'YYYY-MM-DD(DY) HH24:MI')AS START_DAY,
	TO_CHAR(END_DATE, 'YYYY-MM-DD(DY) HH24:MI')AS END_DAY,
	ROUND((END_DATE - START_DATE) * 24, 2) AS TOTAL_DURATION,
	PARTICIPANT,
	RESOURCE_CONTENT
	FROM SCHEDUL_FOR_RESOURCE
	WHERE EMPNO = #{empno}
	ORDER BY START_DAY DESC
	FETCH FIRST 5 ROW ONLY
</select>
		
<!-- 자원디테일 내역 저장  -->		
<update id="insertResDetail">
	UPDATE SCHEDUL_FOR_RESOURCE
	SET PARTICIPANT = #{participant},
	RESOURCE_CONTENT = #{resourceContent}
	WHERE EMPNO = #{empno} AND SCHEDULE_CODE = #{id}
</update>

<!-- ID조회 -->
<select id="selectId" resultMap="resourceCal">
SELECT SCHEDULE_CODE FROM SCHEDUL_FOR_RESOURCE  WHERE EMPNO = #{empno}
</select>

<!-- 자원디테일 내역 조회  -->
<select id="resourceDetail" resultMap="resourceCal">
SELECT PARTICIPANT
, RESOURCE_CONTENT 
FROM SCHEDUL_FOR_RESOURCE
WHERE EMPNO = #{empno}
</select>


</mapper>



























