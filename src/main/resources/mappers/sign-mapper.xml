<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 해당 파일에 모든 쿼리문을 작성 -->
<mapper namespace="signMapper">

	
	<!--연차신청서 테이블  -->
	<resultMap type="com.bykh.groupware.sign.vo.DocAnnualLeaveVO" id="docAnnualLeave">
		<id column="DAL_NO" 				property="dalNo"/>
		<result column="DOC_NO" 			property="docNo"/>
		<result column="DAL_TYPE" 			property="dalType"/>
		<result column="START_DATE" 		property="startDate"/>
		<result column="END_DATE" 			property="endDate"/>
		<result column="START_TIME" 		property="startTime"/>
		<result column="END_TIME" 			property="endTime"/>
		<result column="LEAVE_DAYS" 		property="leaveDays"/>
		<result column="LEAVE_REASON" 		property="leaveReason"/>
	</resultMap>
	
	<!-- 구매신청서 테이블 -->
	<resultMap type="com.bykh.groupware.sign.vo.DocPurchaseOrderVO" id="docPurchaseOrder">
		<id column="DPO_NO" 				property="dpoNo" />
		<result column="DOC_NO" 			property="docNo" />
		<result column="DPO_COMMENT" 		property="dpoComment" />
		
		<association property="buyVO" resultMap="buy"></association>
	</resultMap>
	
	<!--결재문서 테이블  -->
	<resultMap type="com.bykh.groupware.sign.vo.SignDocVO" id="signDoc">
		<id column="DOC_NO" 				property="docNo"/>
		<result column="DOC_TYPE" 			property="docType"/>
		<result column="WRITER_NO" 			property="writerNo"/>
		<result column="DOC_TITLE" 			property="docTitle"/>
		<result column="SGN_STATUS" 		property="sgnStatus"/>
		<result column="SGN_STATUS_STR" 	property="sgnStatusStr"/>
		<result column="INSERT_DATE" 		property="insertDate"/>
		<result column="IS_APPROVED" 		property="isApproved"/>
		
		<association property="empVO" 		resultMap="empMapper.emp"></association>
		<association property="docAnnualLeaveVO" 		resultMap="docAnnualLeave"></association>
		<association property="docPurchaseOrderVO" 		resultMap="docPurchaseOrder"></association>
		<collection property="signVOList" resultMap="sign" column="DOC_NO"></collection>
		<collection property="referrerVOList" resultMap="referrer" column="DOC_NO"></collection>
	</resultMap>
	
	
	<!--결재 테이블 -->
	<resultMap type="com.bykh.groupware.sign.vo.SignVO" id="sign">
		<id column="DOC_NO" 				property="docNo"/>
		<id column="SGN_ORDER"				property="sgnOrder"/>
		<result column="SGN_RESULT"			property="sgnResult"/>
		<result column="SGN_RESULT_STR"		property="sgnResultStr"/>
		<result column="APPROVER_NO" 		property="approverNo"/>
		<result column="APPROVER_NAME" 		property="approverName"/>
		<result column="APPROVER_JOB" 		property="approverJob"/>
		<result column="ATTACHED_FILE_NAME" property="attachedFileName"/>
		<result column="SGN_COMENT" 		property="sgnComent"/>
		<result column="SGN_DATE" 			property="sgnDate"/>
		<result column="NEXT_APPROVER_NO" 	property="nextApproverNo"/>
		
	</resultMap>
	
	<!-- 참조 테이블 -->
	<resultMap type="com.bykh.groupware.sign.vo.ReferrerVO" id="referrer">
		<id column="REFERRER_NO" property="referrerNo"/>
		<id column="DOC_NO" property="docNo"/>
	</resultMap>
	
	
	<!-- 구매 테이블 -->
	<resultMap type="com.bykh.groupware.sign.vo.BuyVO" id="buy">
		<id column="BUY_NO"					property="buyNo"/>
		<result column="DOC_NO"			property="docNo"/>
		<result column="BUY_DEPTNO"			property="buyDeptNo"/>
		<result column="BUY_PRICE"			property="buyPrice"/>
		<result column="BUY_APPROVAL" 		property="buyApproval"/>
		<collection property="buyDetailVOList" resultMap="buyDetail"></collection>
	</resultMap>
	
	<!-- 구매상세 테이블 -->
	<resultMap type="com.bykh.groupware.sign.vo.BuyDetailVO" id="buyDetail">
		<id column="BUY_DETAIL_NO"			property="buyDetailNo"/>
		<result column="BUY_NO"				property="buyNo"/>
		<result column="ITEM_NO"			property="itemNo"/>
		<result column="BUY_CNT" 			property="buyCnt"/>
		<result column="BUY_DETAIL_PRICE" 	property="buyDetailPrice"/>
		<association property="itemVO" resultMap="mroMapper.item"></association>
	</resultMap>
	
	<!-- 메인화면 - 조회 -->
	<select id="getMainSignDocList" resultMap="signDoc">
		SELECT 
		    SD.DOC_NO
		    , DOC_TYPE
		    , DOC_TITLE
		    , WRITER_NO
		    , ENAME
		    , TO_CHAR(INSERT_DATE, 'MM-DD HH24:MI') INSERT_DATE
		    , DECODE(SGN_STATUS, 1, '결재중', 2, '결재완료', 3, '반려') AS SGN_STATUS_STR
		    , (SELECT APPROVER_NO FROM SGN S_SGN
            WHERE S_SGN.DOC_NO = SGN.DOC_NO
            AND SGN_ORDER = (SELECT MIN(SGN_ORDER) FROM SGN S_SGN WHERE S_SGN.DOC_NO = SGN.DOC_NO AND SGN_RESULT IS NULL)) NEXT_APPROVER_NO
            , DECODE((
                SELECT NVL(MAX(SGN_RESULT), NULL) 
                FROM SGN_DOC D, SGN S
                WHERE D.DOC_NO = S.DOC_NO
                AND D.DOC_NO = SD.DOC_NO
                AND SD.WRITER_NO = SD.WRITER_NO
                ), NULL, 0, 1) AS IS_APPROVED
		FROM SGN_DOC SD, EMP, SGN
		WHERE SD.WRITER_NO = EMP.EMPNO
        AND SD.DOC_NO = SGN.DOC_NO
        AND SGN_STATUS != 0
		AND (
				(SD.WRITER_NO = ${empno})
			OR
				(EXISTS (SELECT 1 FROM SGN WHERE SD.DOC_NO = SGN.DOC_NO AND APPROVER_NO = ${empno}))
			OR
                (EXISTS (SELECT 1 FROM REFERRER WHERE SD.DOC_NO = REFERRER.DOC_NO AND REFERRER_NO = ${empno}))
			)
		ORDER BY  (CASE WHEN NEXT_APPROVER_NO = ${empno} THEN 0 ELSE 1 END), INSERT_DATE DESC
        OFFSET 0 ROWS
        FETCH FIRST 5 ROWS ONLY
	</select>
	
	<!-- 기안 조회 페이지 -->
	<select id="getInProgressSignDocList" resultMap="signDoc">
		SELECT 
		    DOC_NO
		    , DOC_TYPE
		    , DOC_TITLE
		    , ENAME
		    , TO_CHAR(INSERT_DATE, 'YYYY-MM-DD HH24:MI') INSERT_DATE
		    , DECODE(SGN_STATUS, 0, '임시저장', 1, '결재중') AS SGN_STATUS_STR
		    , DECODE((
                SELECT NVL(MAX(SGN_RESULT), NULL) 
                FROM SGN_DOC D, SGN S
                WHERE D.DOC_NO = S.DOC_NO
                AND D.DOC_NO = SD.DOC_NO
                AND SD.WRITER_NO = SD.WRITER_NO
                ), NULL, 0, 1) AS IS_APPROVED
		FROM SGN_DOC SD,EMP
		WHERE SD.WRITER_NO = EMP.EMPNO
		AND SGN_STATUS IN (0, 1)
		AND (
                (SGN_STATUS = 0 AND SD.WRITER_NO = ${empno}) 
            OR 
                (SGN_STATUS = 1 AND SD.WRITER_NO = ${empno})
            OR
                (SGN_STATUS = 1 AND EXISTS (SELECT 1 FROM SGN WHERE SD.DOC_NO = SGN.DOC_NO AND APPROVER_NO = ${empno}))
            OR
                (SGN_STATUS = 1 AND EXISTS (SELECT 1 FROM REFERRER WHERE SD.DOC_NO = REFERRER.DOC_NO AND REFERRER_NO = ${empno}))
            )
		ORDER BY INSERT_DATE DESC
	</select>
	<select id="getEndSignDocList" resultMap="signDoc">
		SELECT 
		    DOC_NO
		    , DOC_TYPE
		    , DOC_TITLE
		    , ENAME
		    , TO_CHAR(INSERT_DATE, 'YYYY-MM-DD HH24:MI') INSERT_DATE
		    , DECODE(SGN_STATUS, 2, '결재완료', 3, '반려') AS SGN_STATUS_STR
		FROM SGN_DOC SD, EMP
		WHERE SD.WRITER_NO = EMP.EMPNO
        
		AND SGN_STATUS IN (2, 3)
		AND (
				(SD.WRITER_NO = ${empno})
			OR
				(EXISTS (SELECT 1 FROM SGN WHERE SD.DOC_NO = SGN.DOC_NO AND APPROVER_NO = ${empno}))
			OR
                (EXISTS (SELECT 1 FROM REFERRER WHERE SD.DOC_NO = REFERRER.DOC_NO AND REFERRER_NO = ${empno}))
			)
		ORDER BY INSERT_DATE DESC
	</select>
	<!-- 기안 작성 페이지 이동 시 회원정보 가져가기 -->
	<select id="getSingWriteInfo" resultMap="signDoc">
		SELECT
		    ENAME,
		    EMPNO,
		    E_JOB,
		    DENAME,
		    D.DEPTNO,
		    COALESCE(
		        (SELECT ENAME FROM EMP WHERE (E.E_JOB = '과장' OR EMP.DEPTNO = D.DEPTNO) AND E_JOB = (CASE WHEN E.E_JOB = '과장' THEN '사장' ELSE '과장' END)),
		        (SELECT ENAME FROM EMP WHERE E_JOB = '사장')
		    ) AS APPROVER_NAME,
		    COALESCE(
		        (SELECT EMPNO FROM EMP WHERE (E.E_JOB = '과장' OR EMP.DEPTNO = D.DEPTNO) AND E_JOB = (CASE WHEN E.E_JOB = '과장' THEN '사장' ELSE '과장' END)),
		        (SELECT EMPNO FROM EMP WHERE E_JOB = '사장')
		    ) AS APPROVER_NO,
		    COALESCE(
		        (SELECT E_JOB FROM EMP WHERE (E.E_JOB = '과장' OR EMP.DEPTNO = D.DEPTNO) AND E_JOB = (CASE WHEN E.E_JOB = '과장' THEN '사장' ELSE '과장' END)),
		        (SELECT E_JOB FROM EMP WHERE E_JOB = '사장')
		    ) AS APPROVER_JOB,
		    COALESCE(
		        (SELECT ATTACHED_FILE_NAME FROM EMP, E_IMG WHERE EMP.EMPNO = E_IMG.EMPNO AND (E.E_JOB = '과장' OR EMP.DEPTNO = D.DEPTNO) AND E_JOB = (CASE WHEN E.E_JOB = '과장' THEN '사장' ELSE '과장' END)),
		        (SELECT ATTACHED_FILE_NAME FROM EMP, E_IMG WHERE EMP.EMPNO = E_IMG.EMPNO AND E_JOB = '사장')
		    ) AS ATTACHED_FILE_NAME
		FROM EMP E, DEPT D
		WHERE E.DEPTNO = D.DEPTNO
		AND EMPNO = ${empno}
	</select>
	
	<!-- 결재자 지정 - 전체 사원 조회 -->
	<select id="getEmpList" resultMap="empMapper.emp">
		SELECT 
			EMPNO
			, ENAME
			, E_JOB
		FROM EMP
		WHERE ENAME LIKE '%'||#{ename}||'%'
		ORDER BY DEPTNO
	</select>
	
	<!-- 다음에 문서번호 조회(결재문서 테이블) -->
	<select id="getNextDocNo" resultType="int">
		SELECT NVL(MAX(DOC_NO), 0) + 1 FROM SGN_DOC
	</select>
	
	<!-- 기안 INSERT -->
	<insert id="insertSignDoc">
		INSERT INTO SGN_DOC (
		    DOC_NO
		    , DOC_TYPE
		    , WRITER_NO
		    , DOC_TITLE
		    , SGN_STATUS
		) VALUES (
		    ${docNo}
		    , ${docType}
		    , ${writerNo}
		    , #{docTitle}
		    , ${sgnStatus}
		) 
	</insert>
	<!-- 연차신청서 insert -->
	<insert id="insertDocAnnualLeave">
		INSERT INTO DOC_ANNUAL_LEAVE (
		    DAL_NO
		    , DOC_NO
		    , DAL_TYPE
		    , START_DATE
		    , END_DATE
		<if test="docAnnualLeaveVO.startTime != null and docAnnualLeaveVO.endTime != null">
		    , START_TIME
		    , END_TIME
		</if>
		    , LEAVE_DAYS
		    , LEAVE_REASON
		) VALUES(
		    (SELECT NVL(MAX(DAL_NO), 0) + 1 FROM DOC_ANNUAL_LEAVE)
		    , ${docAnnualLeaveVO.docNo}
		    , #{docAnnualLeaveVO.dalType}
		    , #{docAnnualLeaveVO.startDate}
		    , #{docAnnualLeaveVO.endDate}
		<if test="docAnnualLeaveVO.startTime != null and docAnnualLeaveVO.endTime != null">
		    , ${docAnnualLeaveVO.startTime}
		    , ${docAnnualLeaveVO.endTime}		
		</if>
		    , ${docAnnualLeaveVO.leaveDays}
		    , #{docAnnualLeaveVO.leaveReason}
		)
	</insert>
	<!-- 결재문서 insert -->
	<insert id="insertDocPurchaseOrder">
		INSERT INTO DOC_PURCHASE_ORDER (
		    DPO_NO
		    , DOC_NO
		    , DPO_COMMENT
		) VALUES(
		    (SELECT NVL(MAX(DPO_NO), 0)+1 FROM DOC_PURCHASE_ORDER)
		    , ${docNo}
		    , #{dpoComment}
		)
	</insert>
	
	<!-- 다음 BuyNo 조회 -->
	<select id="getNextBuyNo" resultType="int">
		SELECT NVL(MAX(BUY_NO), 0)+1 FROM BUY
	</select>
	
	<!-- buy 테이블 insert -->
	<insert id="insertBuy">
		INSERT INTO BUY (
		    BUY_NO
		    , DOC_NO
		    , BUY_DEPTNO
		    , BUY_PRICE
		    , BUY_APPROVAL
		) VALUES(
		    ${buyNo}
		    , ${docNo}
		    , ${buyDeptNo}
		    , ${buyPrice}
		    , 0
		)
	</insert>
	<!-- buyDetail 테이블 insert -->
	<insert id="insertBuyDetails">
		INSERT ALL
		<foreach collection="buyDetailVOList" item="buyDetail" index="i">
			 INTO BUY_DETAIL (
		        BUY_DETAIL_NO
		        , BUY_NO
		        , ITEM_NO
		        , BUY_CNT
		        , BUY_DETAIL_PRICE
		    ) VALUES(
		        (SELECT NVL(MAX(BUY_DETAIL_NO), 0) + ${i+1} FROM BUY_DETAIL)
		        , ${buyDetailVOList[0].buyNo}
		        , ${buyDetail.itemNo}
		        , ${buyDetail.buyCnt}
		        , ${buyDetail.buyDetailPrice}
		    )
		</foreach>
		SELECT 1 FROM DUAL
	</insert>
	<!-- 결재리스트 추가 -->
	<insert id="insertSignList">
		INSERT ALL
		<foreach collection="signVOList" item="sign" index="i">
			INTO SGN (
			    DOC_NO
			    , SGN_ORDER
			    , APPROVER_NO
			) VALUES(
			    ${docNo}
			    , ${i+1}
			    , ${sign.approverNo}
			)
		</foreach>
		SELECT 1 FROM DUAL
	</insert>
	<!-- 참조리스트 추가 -->
	<insert id="insertReferrerList">
		INSERT ALL
		<foreach collection="referrerVOList" item="referrer">
			INTO REFERRER (
				REFERRER_NO
				, DOC_NO
			) VALUES(
				${referrer.referrerNo}
				, ${docNo}
			)
		</foreach>
		SELECT 1 FROM DUAL
	</insert>
	
	<!-- 결재문서 상세조회 - 연차신청서 -->
	<select id="getDetailDocAnnualLeave" resultMap="signDoc">
		SELECT 
		    DOC.DOC_NO
		    , WRITER_NO
		    , DOC_TITLE
            , TO_CHAR(INSERT_DATE, 'YYYY-MM-DD') INSERT_DATE
		    , DAL_NO
		    , DAL_TYPE
		    , TO_CHAR(START_DATE, 'YYYY-MM-DD') START_DATE
		    , TO_CHAR(END_DATE, 'YYYY-MM-DD') END_DATE
		    , START_TIME
		    , END_TIME
		    , LEAVE_DAYS
		    , LEAVE_REASON
            , ENAME
            , DENAME
            , APPROVER_NO
            , (SELECT ATTACHED_FILE_NAME FROM E_IMG WHERE EMPNO = EMP.EMPNO) ATTACHED_FILE_NAME
            , (SELECT ENAME FROM EMP WHERE EMPNO = SGN.APPROVER_NO) APPROVER_NAME
            , (SELECT E_JOB FROM EMP WHERE EMPNO = SGN.APPROVER_NO) APPROVER_JOB
            , SGN_ORDER
            , DECODE(SGN_RESULT, '0', '미결재', '1', '결재') SGN_RESULT_STR
            , SGN_COMENT
            , TO_CHAR(SGN_DATE, 'YYYY-MM-DD')SGN_DATE
            , (SELECT APPROVER_NO FROM SGN S_SGN
            WHERE S_SGN.DOC_NO = SGN.DOC_NO
            AND SGN_ORDER = (SELECT MIN(SGN_ORDER) FROM SGN S_SGN WHERE S_SGN.DOC_NO = SGN.DOC_NO AND SGN_RESULT IS NULL)) NEXT_APPROVER_NO
		FROM SGN_DOC DOC, DOC_ANNUAL_LEAVE DAL, SGN, EMP, DEPT, E_IMG
		WHERE DOC.DOC_NO = DAL.DOC_NO
        AND SGN.DOC_NO = DOC.DOC_NO
        AND DOC.WRITER_NO = EMP.EMPNO
        AND EMP.DEPTNO = DEPT.DEPTNO
        AND EMP.EMPNO = E_IMG.EMPNO
		AND DOC.DOC_NO = ${docNo}
		
	</select>
	<!-- '결재' / '반려' 버튼 클릭 시 실행 -->
	<update id="updateSignResult">
		UPDATE SGN
		SET SGN_RESULT = ${sgnResult}
		<if test='sgnComent != null and !sgnComent.equals("")'>
		    , SGN_COMENT = #{sgnComent}
		</if>
		    , SGN_DATE = CURRENT_DATE
		WHERE DOC_NO = #{docNo}
		AND APPROVER_NO = ${approverNo}
	</update>
	<!-- 결재문서 결재상태(SGN_STATUS) 변경 (0:임시저장/1:결재중/2:결재완료/3:반려) -->
	<update id="updateSignStatus">
		UPDATE SGN_DOC
		SET SGN_STATUS = #{sgnStatus}
		WHERE DOC_NO = #{docNo}
	</update>
	
	<!-- 다음 결재자 존재여부 조회 -->
	<!-- 시간 날 때 결재자 번호 조회로 변경하기 -->
	<select id="getNextApproverNo" resultType="int">
		SELECT 
		    NVL2(MIN(APPROVER_NO), 1, 0) 
		FROM SGN
		WHERE DOC_NO = #{docNo}
		AND (
		    NOT (0 = (SELECT SUM(DECODE(SGN_RESULT, 1, 0, 1)) FROM SGN WHERE DOC_NO = #{docNo}))
		    AND
		    NOT (EXISTS(SELECT 1 FROM SGN WHERE DOC_NO = #{docNo} AND SGN_RESULT = 0))
		)
		AND SGN_ORDER = (SELECT MIN(SGN_ORDER) FROM SGN WHERE DOC_NO = #{docNo} AND SGN_RESULT IS NULL )
	</select>
	
	<!-- 결재문서 상세조회 - 구매신청서 -->
	<select id="getDetailDocPurchaseOrder" resultMap="signDoc">
		SELECT
		    DOC.DOC_NO
		    , WRITER_NO
		    , TO_CHAR(INSERT_DATE, 'YYYY-MM-DD') INSERT_DATE
		    , DPO_NO
		    , ENAME
		    , DENAME
		    , ITEM_NAME
		    , BUY_CNT
		    , ITEM_PRICE
		    , BUY_DETAIL_NO
		    , BUY_DETAIL_PRICE
		    , BUY_PRICE
		    , DPO_COMMENT
		    , APPROVER_NO
		    , (SELECT ENAME FROM EMP WHERE EMPNO = SGN.APPROVER_NO) APPROVER_NAME
		    , (SELECT E_JOB FROM EMP WHERE EMPNO = SGN.APPROVER_NO) APPROVER_JOB
		    , SGN_ORDER
		    , DECODE(SGN_RESULT, '0', '미결재', '1', '결재') SGN_RESULT_STR
		    , SGN_COMENT
		    , TO_CHAR(SGN_DATE, 'YYYY-MM-DD')SGN_DATE
		    , (SELECT APPROVER_NO FROM SGN S_SGN
            WHERE S_SGN.DOC_NO = SGN.DOC_NO
            AND SGN_ORDER = (SELECT MIN(SGN_ORDER) FROM SGN S_SGN WHERE S_SGN.DOC_NO = SGN.DOC_NO AND SGN_RESULT IS NULL)) NEXT_APPROVER_NO
		    , BUY.BUY_NO
		    , ITEM.ITEM_NO
		FROM SGN_DOC DOC, DOC_PURCHASE_ORDER DPO, SGN, EMP, DEPT, BUY, BUY_DETAIL BD, ITEM
		WHERE DOC.DOC_NO = DPO.DOC_NO
		AND DOC.DOC_NO = SGN.DOC_NO
		AND DOC.WRITER_NO = EMP.EMPNO
		AND EMP.DEPTNO = DEPT.DEPTNO
		AND BUY.DOC_NO = DPO.DOC_NO
		AND BUY.BUY_NO = BD.BUY_NO
		AND BD.ITEM_NO = ITEM.ITEM_NO
		AND DOC.DOC_NO = ${docNo}
		ORDER BY BUY_DETAIL_NO
	</select>
	
	<select id="getItemList" resultMap="mroMapper.item">
		SELECT 
			ITEM_NO
			, ITEM_NAME
			, ITEM_PRICE
		FROM ITEM
		ORDER BY ITEM_NO
	</select>
	
	<!-- 구매신청서 삭제  -->
	<delete id="delPurchaseOrder">
		BEGIN
		    DELETE FROM BUY_DETAIL WHERE BUY_NO = (SELECT BUY_NO FROM BUY WHERE DOC_NO = ${docNo});
		    DELETE FROM BUY WHERE DOC_NO = ${docNo};
            DELETE FROM DOC_PURCHASE_ORDER WHERE DOC_NO = ${docNo};
		    DELETE FROM SGN WHERE DOC_NO = ${docNo};
		    DELETE FROM REFERRER WHERE DOC_NO = ${docNo};
		    DELETE FROM SGN_DOC WHERE DOC_NO = ${docNo};
		END;
	</delete>
	<!-- 연차신청서 삭제 -->
	<delete id="delAnnualLeave">
		BEGIN
		    DELETE FROM DOC_ANNUAL_LEAVE WHERE DOC_NO = #{docNo};
		    DELETE FROM SGN WHERE DOC_NO = #{docNo};
		    DELETE FROM REFERRER WHERE DOC_NO = ${docNo};
		    DELETE FROM SGN_DOC WHERE DOC_NO = #{docNo};
		END;
	</delete>
	
</mapper>



























