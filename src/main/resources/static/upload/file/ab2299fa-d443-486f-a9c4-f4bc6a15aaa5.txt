git : 형상관리도구

git(->), github()

- 깃허브 작업 순서(처음 깃허브에 파일 올릴 때)
1. github에서 원격 레파지토리(remote repository) 생성
2. 로컬 레파지토리(local repository) 생성
  2-1. 로컬 레파지토리로 사용할 폴더 생성
  2-2. 해당 폴더에 들어가서 마우스 우측 클릭 - git bash here
  2-3. (pc당 최초 한 번만) git 사용자 지정
    git config --global user.name -> 현재 pc의 계정 확인
    git config --global user.name "계정명" -> 현재 pc의 계정 변경
    git config --global user.email -> 현재 pc의 email 확인
    git config --global user.email "이메일 주소" -> 현재 pc의 email 변경
  2-4. 해당 폴더를 로컬 레파지토리로 지정
    git init
3. 원격 저장소와 로컬 저장소 연결
    git remote add origin 원격 저장소 URL (https://github.com/아이디/레파지토리명.git)
    git remote -v -> 확인
4. 지역 저장소에 데이터 저장(변경, 추가, 삭제)
    git add . -> 담아서
    git commit -m "커밋 메세지" -> 저장
    git status -> 상태 확인
5. 원격 저장소에 데이터 저장
    git push origin master

한 번 연결했으면 4~5번만 반복




---------------------------------------------------------------
- 깃허브에 있는 데이터 내려 받기(최초에 한 번)
1. 내려받고 싶은 폴더에서 git bash 실행
2. git clone 원격 저장소 URL -> 원격 저장소 이름대로 파일을 가져 옴
  git clone 원격 저장소 URL 폴더명 -> 폴더명 변경




---------------------------------------------------------------
- 깃허브에 있는 데이터 내려 받기(최초 이후)
git pull origin master




==> 반복
1. 내려받기 -> git pull origin master
2. ~작업~
3. git add .
4. git commit -m "~"
5. git push origin master

















GUI ---------------------------------------------


----- 처음 Push

1. 원격 저장소 생성
	Github에서 create new repository

2. 로컬 저장소 생성
	프로젝트 우측 클릭 - Team -  Share Project
	Use or create repository in parent folder of project 체크
	Create Repository - Finish

3. 원격 저장소 - 로컬 저장소 연결
	GIT Perspective
	해당 프로젝트 Remotes -> create remote
	URI : 원격 저장소 URL
	(Authentication - User : 깃헙 이메일, Password : 토큰)

4. 데이터 push
	프로젝트 우측 클릭 - Team - Synchronize Workspace
	Incoming mode (원격 저장소에서 받을 수 있는 파일)
	Outgoing mode (원격 저장소에 올릴 수 있는 파일)
	
	Unstaged Changes ++ -> Commit Message 작성 -> Commit and Push





---- 
1. 
	GIT Perspective - 왼쪽 창, 우측 상단에 세 번째 (Clone ~..) 
	원격 저장소 경로 - 로컬 저장소 경로 지정

2.
	Java Perspective - import(Existing Projects~ 또는 Projects~)
	프로젝트 우측 클릭 - configure - add gradle nature










1.
	프로젝트 우측 클릭 - Team - Synchronize Workspace
	Window - Show View - other - Git - Git Staging
	Unstaged Changes ++ -> Commit Message 작성 -> Commit and Push




1. 
	프로젝트 우측 클릭 - Team - Synchronize Workspace
	Incoming mode 확인 후 우측 상단 세 번째 Pull